# Author: Zacks Shen
# GitHub: https://github.com/ZacksAmber/ENV/Docker
# Reference: https://gist.github.com/lsena/42e091bfbf2bcea26a5561794f54f9bc#file-dockerfile
# Reference: https://sourcery.ai/blog/python-docker/
# Reference: https://github.com/deluan/zsh-in-docker
# Reference: https://pipenv.pypa.io/en/latest/basics
# Reference: https://sourcery.ai/blog/python-docker/

# Global ARGs for username and project directory
# https://docs.docker.com/engine/reference/builder/#arg
ARG USERNAME=zacks
ARG PROJECT=portfolio
ARG PYTHON_MAJOR=python3
ARG PYTHON_MARJOR_MINOR=python3.9

#################
# STAGE builder #
#################
# using ubuntu LTS version
FROM ubuntu:20.04 AS builder

# Renew ARGs from Global ARGs
ARG USERNAME
ARG PROJECT
ARG PYTHON_MAJOR
ARG PYTHON_MARJOR_MINOR
# avoid stuck build due to user prompt
ARG DEBIAN_FRONTEND=noninteractive

# Install dependencies for building python venv
RUN apt-get update && apt-get install --no-install-recommends -y $PYTHON_MARJOR_MINOR $PYTHON_MARJOR_MINOR-dev $PYTHON_MARJOR_MINOR-venv $PYTHON_MAJOR-pip $PYTHON_MAJOR-wheel build-essential \
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
# using same user name in both builder and runtime to avoid issuess with packages
RUN $PYTHON_MARJOR_MINOR -m venv /home/$USERNAME/venv
ENV PATH="/home/$USERNAME/venv/bin:$PATH"

# Install packages from requirements
COPY requirements.txt .
RUN pip3 install --no-cache-dir wheel
RUN pip3 install --no-cache-dir -r requirements.txt


#################
# STAGE runtime #
#################
FROM ubuntu:20.04 AS runtime

# Renew ARGs from Global ARGs
ARG USERNAME
ARG PROJECT
ARG PYTHON_MAJOR
ARG PYTHON_MARJOR_MINOR
# Set ARGs for creating user
ARG GROUP_NAME=dev
ARG USER_UID=1000
ARG USER_GID=1000

# Add group and user
RUN groupadd --gid $USER_GID $GROUP_NAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID --create-home $USERNAME

# Install least dependencies for runtime
RUN apt-get update && apt-get install --no-install-recommends -y $PYTHON_MARJOR_MINOR $PYTHON_MAJOR-venv \
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual env from builder's specific path to runtime's same path
COPY --from=builder /home/$USERNAME/venv /home/$USERNAME/venv

# # WARNING! Install zsh and sudo for dev only!
# # https://github.com/deluan/zsh-in-docker
# RUN apt-get update \
#     && apt-get install -y sudo wget \
#     && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
#     && chmod 0440 /etc/sudoers.d/$USERNAME \
#     # Clean up
#     && apt-get autoremove -y \
#     && apt-get clean -y \
#     && rm -rf /var/lib/apt/lists/*
# # Swtich user from root to $USERNAME to install zsh
# USER $USERNAME
# # Uses "robbyrussell" theme (original Oh My Zsh theme), with no plugins
# RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.2/zsh-in-docker.sh)" -- \
#     -t robbyrussell
# # WARNING! Install zsh and sudo for dev only!

# Swtich user from root to $USERNAME to perform following operations
USER $USERNAME
# Let user create WORKDIR to enuse enough permissions
RUN mkdir /home/$USERNAME/$PROJECT
# Setup working directory, Docker to use this path as the default location for all subsequent commands
WORKDIR /home/$USERNAME/$PROJECT

# Copy all files from docker image to the WROKDIR
COPY . .

# Expose port for forwarding
EXPOSE 5000

# Make sure all messages always reach console
ENV PYTHONUNBUFFERED=1

# Activate virtual environment
ENV VIRTUAL_ENV=/home/$USERNAME/venv
ENV PATH="/home/$USERNAME/venv/bin:$PATH"

# WARNING! Uncomment the following line for production!
# /dev/shm is mapped to shared memory and should be used for gunicorn heartbeat
# this will improve performance and avoid random freezes
# CMD ["gunicorn","-b", "0.0.0.0:5000", "-w", "4", "-k", "gevent", "--worker-tmp-dir", "/dev/shm", "app:app"]
